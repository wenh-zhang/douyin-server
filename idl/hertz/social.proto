syntax = "proto2";
package douyin.extra.second;
import "core.proto";

message douyin_relation_action_request {
  required string token = 1; // 用户鉴权token
  required int64 to_user_id = 2; // 对方用户id
  required int32 action_type = 3; // 1-关注，2-取消关注
}

message douyin_relation_action_response {
  required int32 status_code = 1; // 状态码，0-成功，其他值-失败
  optional string status_msg = 2; // 返回状态描述
}

message douyin_relation_follow_list_request {
  required int64 user_id = 1; // 用户id
  required string token = 2; // 用户鉴权token
}

message douyin_relation_follow_list_response {
  required int32 status_code = 1; // 状态码，0-成功，其他值-失败
  optional string status_msg = 2; // 返回状态描述
  repeated core.User user_list = 3; // 用户信息列表
}

message douyin_relation_follower_list_request {
  required int64 user_id = 1; // 用户id
  required string token = 2; // 用户鉴权token
}

message douyin_relation_follower_list_response {
  required int32 status_code = 1; // 状态码，0-成功，其他值-失败
  optional string status_msg = 2; // 返回状态描述
  repeated core.User user_list = 3; // 用户列表
}

message douyin_relation_friend_list_request {
  required int64 user_id = 1; // 用户id
  required string token = 2; // 用户鉴权token
}

message douyin_relation_friend_list_response {
  required int32 status_code = 1; // 状态码，0-成功，其他值-失败
  optional string status_msg = 2; // 返回状态描述
  repeated FriendUser user_list = 3; // 用户列表
}


message FriendUser extend core.User {
  optional string message = 1; // 和该好友的最新聊天消息
  required int64 msgType = 2; // message消息的类型，0 => 当前请求用户接收的消息， 1 => 当前请求用户发送的消息
}